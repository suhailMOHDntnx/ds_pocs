
package suhailmohd.zeusconfig.generated;

import java.util.ArrayList;
import java.util.List;

public class GenProtoTop {

    public Long cerebroFeaturesBitmap;
    public Long clusterFunctions;
    public Long acropolisBaselineUserMemoryMbX86;
    public GenClickstreamConfig clickstreamConfig;
    public GenNetworkConfig rdmaNetworkConfig;
    public GenAegis aegis;
    public Long defaultSspContainerId;
    public String qosSystemPrincipalName;
    public GenSymbolicLink symbolicLink;
    public Long stargateUpgradeLogicalTimestamp;
    public String cassandraSchemaVersion;
    public Boolean useScheduler;
    public Boolean rf1ContainerEnabled;
    public String clusterName;
    public String previousClusterExternalIp;
    public GenWitnessState witnessState;
    public Long clusterMasqueradingPort;
    public Boolean entityCentricDrEnabled;
    public String clusterExternalDataServicesIp;
    public Long mantleVersion;
    public Boolean dedupChecksumCollisionExceeded;
    public Long rowCasUpgradeTimestamp;
    public Boolean disableCompression;
    public GenHypervisorLldpConfig hypervisorLldpConfig;
    public GenCuratorScanInfo curatorScanInfo;
    public Boolean useChecksumBasedDedup;
    public Long acropolisBaselineKernelMemoryMbX86;
    public String externalSubnet;
    public Boolean ftSupportEnabled;
    public String qosCatchallPrincipalName;
    public Boolean imageConversionCompleteObelix;
    public Boolean acropolisHaPriorityCleanupDone;
    @org.apache.calcite.adapter.java.Array(component = String.class)
    public List<String> ntpServerList = new ArrayList<String>();
    public Long clusterUsageWarningAlertThresholdPct;
    public GenAcropolisHAConfig acropolisHaConfig;
    public GenHypervisorSecurityComplianceConfig hypervisorSecurityComplianceConfig;
    public Boolean disableOnDiskDedup;
    public Long managementShareContainerId;
    public Long clusterContentCacheFingerprintPct;
    public GenLWSStoreConfig lwsStoreConfig;
    public Boolean enableEfficientMetricSync;
    public Long initialStargateVersion;
    public GenFaultToleranceState clusterFaultToleranceState;
    public Boolean acropolisSchedulerCleanupDone;
    public Boolean enableStrictDomainAwareness;
    public GenClusterCapabilities clusterCapabilities;
    public GenDnsConfig dnsConfig;
    public GenCloudSiteInfo cloudSiteInfo;
    public Long aesSupportedVersionLogicalTimestamp;
    public String previousClusterExternalIpv6;
    public Long clusterUsageCriticalAlertThresholdPct;
    public Boolean vdiskListInPithos;
    public GenNetworkConfig backplaneNetworkConfig;
    public GenDynamicRingChangeInfo dynRingChangeInfo;
    public Boolean acropolisAgentVmConversionDone;
    public Long clusterIncarnationId;
    public Boolean catalogSubsetMigrationEnabled;
    public GenClusterHibernateState hibernateState;
    public Boolean useLowerTierToEnforceRuAwarePlacement;
    public Boolean eidMapEntriesPerNodeDedupThresholdExceeded;
    public String clusterArch;
    public Boolean passwordRemoteLoginEnabled;
    public Boolean shadowClonesEnabled;
    public GenSecurityComplianceConfig cvmSecurityComplianceConfig;
    public String externalV6Subnet;
    public GenClusterConversionStatus clusterConversionStatus;
    public GenCuratorStargateProtocolConfig curatorStargateProtocolConfig;
    @org.apache.calcite.adapter.java.Array(component = String.class)
    public List<String> nameServerIpList = new ArrayList<String>();
    public String clusterOperationMode;
    public String clusterMasqueradingIp;
    public GenAuthConfig authConfig;
    public GenRecycleBinState recycleBinState;
    public Long logicalTimestamp;
    public Boolean acropolisSchedulerHotAddCleanupDone;
    @org.apache.calcite.adapter.java.Array(component = Long.class)
    public List<Long> pauseEcEncodeContainersList = new ArrayList<Long>();
    public Long clusterId;
    public String clusterUuid;
    @org.apache.calcite.adapter.java.Array(component = String.class)
    public List<String> diskTombstoneList = new ArrayList<String>();
    public Boolean sspConfigOwner;
    public Boolean isLts;
    public Long stargateVersion;
    public Long recycleBinTtlSecs;
    public Boolean extendedNfsFhandleEnabled;
    public String nccVersion;
    public GenPithosVersionInformation pithosVersionInfo;
    public Boolean multiFileSupportEnabled;
    public String vgOwnership;
    public Boolean blockStoreEnabled;
    public String nfsSubnetWhitelist;
    public String kmsType;
    public GenRSyslogConfig rsyslogConfig;
    public String internalSubnet;
    public Boolean memNvmeStorageTieringEnabled;
    public Boolean disableFingerprinting;
    public Double alertThresholdStorageProvisioning;
    public Boolean catalogPeRegistered;
    public String defaultGatewayIp;
    public Boolean stigEnabled;
    public String clusterExternalIp;
    public GenEncryptionParams clusterEncryptionParams;
    public String releaseVersion;
    public String timezone;
    public GenAdsConfig adsConfig;
    public GenAutoRingFixState ringFixState;
    public Boolean rebuildReservationEnabled;
    public String fileServerUuid;
    public Boolean vstoreUpgradeDone;
    public GenPCClusterInfo pcClusterInfo;
    public Boolean metadataSnapshotsEnabled;
    public Boolean networkConnectionStatsCollectionEnabled;
    public Boolean disableDegradedNodeMonitoring;
    public GenIscsiConfig iscsiConfig;
    public GenPeriodicScheduleConfig curatorMaintenanceModeConfig;
    public Long ahvMemoryModelVersion;
    public GenCertificationSigningInfo certificationSigningInfo;
    public String clusterFullyQualifiedDomainName;
    public GenBlockIscsiTargetIPs blockIscsiTargetIps;
    public GenDomainFaultToleranceState domainFaultToleranceState;
    public Long metadataSnapshotLogicalTimestamp;
    @org.apache.calcite.adapter.java.Array(component = String.class)
    public List<String> cellFqdnList = new ArrayList<String>();
    public String rowCasUpgradeStatus;
    public Boolean catalogChangeOwnerInProgress;
    public Boolean commonCriteriaMode;
    public String clusterExternalIpv6;
    public GenSnmpInfo snmpInfo;
    public Boolean initializedDedupExtentsTwoPhaseDeletion;

    /**
     * No args constructor for use in serialization
     * 
     */
    public GenProtoTop() {
    }

    /**
     * 
     * @param disableCompression
     * @param lwsStoreConfig
     * @param extendedNfsFhandleEnabled
     * @param hypervisorLldpConfig
     * @param curatorScanInfo
     * @param useLowerTierToEnforceRuAwarePlacement
     * @param ahvMemoryModelVersion
     * @param certificationSigningInfo
     * @param vdiskListInPithos
     * @param clusterExternalIp
     * @param clusterUuid
     * @param clusterOperationMode
     * @param symbolicLink
     * @param imageConversionCompleteObelix
     * @param recycleBinTtlSecs
     * @param disableOnDiskDedup
     * @param clusterCapabilities
     * @param backplaneNetworkConfig
     * @param stargateUpgradeLogicalTimestamp
     * @param useScheduler
     * @param initialStargateVersion
     * @param vgOwnership
     * @param disableFingerprinting
     * @param recycleBinState
     * @param diskTombstoneList
     * @param ringFixState
     * @param previousClusterExternalIpv6
     * @param authConfig
     * @param dnsConfig
     * @param defaultSspContainerId
     * @param clusterIncarnationId
     * @param clusterEncryptionParams
     * @param metadataSnapshotLogicalTimestamp
     * @param stargateVersion
     * @param clusterName
     * @param acropolisHaPriorityCleanupDone
     * @param ntpServerList
     * @param clusterUsageCriticalAlertThresholdPct
     * @param enableStrictDomainAwareness
     * @param acropolisBaselineUserMemoryMbX86
     * @param ftSupportEnabled
     * @param entityCentricDrEnabled
     * @param clusterFullyQualifiedDomainName
     * @param clusterMasqueradingPort
     * @param acropolisSchedulerCleanupDone
     * @param clusterExternalIpv6
     * @param enableEfficientMetricSync
     * @param qosCatchallPrincipalName
     * @param managementShareContainerId
     * @param nfsSubnetWhitelist
     * @param snmpInfo
     * @param clusterFunctions
     * @param clusterUsageWarningAlertThresholdPct
     * @param defaultGatewayIp
     * @param externalSubnet
     * @param fileServerUuid
     * @param witnessState
     * @param initializedDedupExtentsTwoPhaseDeletion
     * @param useChecksumBasedDedup
     * @param domainFaultToleranceState
     * @param cellFqdnList
     * @param pcClusterInfo
     * @param clickstreamConfig
     * @param curatorStargateProtocolConfig
     * @param mantleVersion
     * @param clusterMasqueradingIp
     * @param eidMapEntriesPerNodeDedupThresholdExceeded
     * @param metadataSnapshotsEnabled
     * @param cassandraSchemaVersion
     * @param clusterExternalDataServicesIp
     * @param clusterArch
     * @param isLts
     * @param kmsType
     * @param clusterConversionStatus
     * @param curatorMaintenanceModeConfig
     * @param commonCriteriaMode
     * @param disableDegradedNodeMonitoring
     * @param rf1ContainerEnabled
     * @param acropolisSchedulerHotAddCleanupDone
     * @param hibernateState
     * @param pithosVersionInfo
     * @param aegis
     * @param sspConfigOwner
     * @param blockStoreEnabled
     * @param cvmSecurityComplianceConfig
     * @param qosSystemPrincipalName
     * @param shadowClonesEnabled
     * @param aesSupportedVersionLogicalTimestamp
     * @param internalSubnet
     * @param logicalTimestamp
     * @param rowCasUpgradeStatus
     * @param rowCasUpgradeTimestamp
     * @param clusterContentCacheFingerprintPct
     * @param previousClusterExternalIp
     * @param acropolisAgentVmConversionDone
     * @param pauseEcEncodeContainersList
     * @param rebuildReservationEnabled
     * @param dedupChecksumCollisionExceeded
     * @param hypervisorSecurityComplianceConfig
     * @param timezone
     * @param rdmaNetworkConfig
     * @param dynRingChangeInfo
     * @param externalV6Subnet
     * @param iscsiConfig
     * @param acropolisBaselineKernelMemoryMbX86
     * @param clusterId
     * @param cloudSiteInfo
     * @param passwordRemoteLoginEnabled
     * @param vstoreUpgradeDone
     * @param catalogChangeOwnerInProgress
     * @param clusterFaultToleranceState
     * @param networkConnectionStatsCollectionEnabled
     * @param alertThresholdStorageProvisioning
     * @param catalogPeRegistered
     * @param releaseVersion
     * @param adsConfig
     * @param cerebroFeaturesBitmap
     * @param nccVersion
     * @param rsyslogConfig
     * @param blockIscsiTargetIps
     * @param nameServerIpList
     * @param stigEnabled
     * @param memNvmeStorageTieringEnabled
     * @param acropolisHaConfig
     * @param catalogSubsetMigrationEnabled
     * @param multiFileSupportEnabled
     */
    public GenProtoTop(Long cerebroFeaturesBitmap, Long clusterFunctions, Long acropolisBaselineUserMemoryMbX86, GenClickstreamConfig clickstreamConfig, GenNetworkConfig rdmaNetworkConfig, GenAegis aegis, Long defaultSspContainerId, String qosSystemPrincipalName, GenSymbolicLink symbolicLink, Long stargateUpgradeLogicalTimestamp, String cassandraSchemaVersion, Boolean useScheduler, Boolean rf1ContainerEnabled, String clusterName, String previousClusterExternalIp, GenWitnessState witnessState, Long clusterMasqueradingPort, Boolean entityCentricDrEnabled, String clusterExternalDataServicesIp, Long mantleVersion, Boolean dedupChecksumCollisionExceeded, Long rowCasUpgradeTimestamp, Boolean disableCompression, GenHypervisorLldpConfig hypervisorLldpConfig, GenCuratorScanInfo curatorScanInfo, Boolean useChecksumBasedDedup, Long acropolisBaselineKernelMemoryMbX86, String externalSubnet, Boolean ftSupportEnabled, String qosCatchallPrincipalName, Boolean imageConversionCompleteObelix, Boolean acropolisHaPriorityCleanupDone, List<String> ntpServerList, Long clusterUsageWarningAlertThresholdPct, GenAcropolisHAConfig acropolisHaConfig, GenHypervisorSecurityComplianceConfig hypervisorSecurityComplianceConfig, Boolean disableOnDiskDedup, Long managementShareContainerId, Long clusterContentCacheFingerprintPct, GenLWSStoreConfig lwsStoreConfig, Boolean enableEfficientMetricSync, Long initialStargateVersion, GenFaultToleranceState clusterFaultToleranceState, Boolean acropolisSchedulerCleanupDone, Boolean enableStrictDomainAwareness, GenClusterCapabilities clusterCapabilities, GenDnsConfig dnsConfig, GenCloudSiteInfo cloudSiteInfo, Long aesSupportedVersionLogicalTimestamp, String previousClusterExternalIpv6, Long clusterUsageCriticalAlertThresholdPct, Boolean vdiskListInPithos, GenNetworkConfig backplaneNetworkConfig, GenDynamicRingChangeInfo dynRingChangeInfo, Boolean acropolisAgentVmConversionDone, Long clusterIncarnationId, Boolean catalogSubsetMigrationEnabled, GenClusterHibernateState hibernateState, Boolean useLowerTierToEnforceRuAwarePlacement, Boolean eidMapEntriesPerNodeDedupThresholdExceeded, String clusterArch, Boolean passwordRemoteLoginEnabled, Boolean shadowClonesEnabled, GenSecurityComplianceConfig cvmSecurityComplianceConfig, String externalV6Subnet, GenClusterConversionStatus clusterConversionStatus, GenCuratorStargateProtocolConfig curatorStargateProtocolConfig, List<String> nameServerIpList, String clusterOperationMode, String clusterMasqueradingIp, GenAuthConfig authConfig, GenRecycleBinState recycleBinState, Long logicalTimestamp, Boolean acropolisSchedulerHotAddCleanupDone, List<Long> pauseEcEncodeContainersList, Long clusterId, String clusterUuid, List<String> diskTombstoneList, Boolean sspConfigOwner, Boolean isLts, Long stargateVersion, Long recycleBinTtlSecs, Boolean extendedNfsFhandleEnabled, String nccVersion, GenPithosVersionInformation pithosVersionInfo, Boolean multiFileSupportEnabled, String vgOwnership, Boolean blockStoreEnabled, String nfsSubnetWhitelist, String kmsType, GenRSyslogConfig rsyslogConfig, String internalSubnet, Boolean memNvmeStorageTieringEnabled, Boolean disableFingerprinting, Double alertThresholdStorageProvisioning, Boolean catalogPeRegistered, String defaultGatewayIp, Boolean stigEnabled, String clusterExternalIp, GenEncryptionParams clusterEncryptionParams, String releaseVersion, String timezone, GenAdsConfig adsConfig, GenAutoRingFixState ringFixState, Boolean rebuildReservationEnabled, String fileServerUuid, Boolean vstoreUpgradeDone, GenPCClusterInfo pcClusterInfo, Boolean metadataSnapshotsEnabled, Boolean networkConnectionStatsCollectionEnabled, Boolean disableDegradedNodeMonitoring, GenIscsiConfig iscsiConfig, GenPeriodicScheduleConfig curatorMaintenanceModeConfig, Long ahvMemoryModelVersion, GenCertificationSigningInfo certificationSigningInfo, String clusterFullyQualifiedDomainName, GenBlockIscsiTargetIPs blockIscsiTargetIps, GenDomainFaultToleranceState domainFaultToleranceState, Long metadataSnapshotLogicalTimestamp, List<String> cellFqdnList, String rowCasUpgradeStatus, Boolean catalogChangeOwnerInProgress, Boolean commonCriteriaMode, String clusterExternalIpv6, GenSnmpInfo snmpInfo, Boolean initializedDedupExtentsTwoPhaseDeletion) {
        super();
        this.cerebroFeaturesBitmap = cerebroFeaturesBitmap;
        this.clusterFunctions = clusterFunctions;
        this.acropolisBaselineUserMemoryMbX86 = acropolisBaselineUserMemoryMbX86;
        this.clickstreamConfig = clickstreamConfig;
        this.rdmaNetworkConfig = rdmaNetworkConfig;
        this.aegis = aegis;
        this.defaultSspContainerId = defaultSspContainerId;
        this.qosSystemPrincipalName = qosSystemPrincipalName;
        this.symbolicLink = symbolicLink;
        this.stargateUpgradeLogicalTimestamp = stargateUpgradeLogicalTimestamp;
        this.cassandraSchemaVersion = cassandraSchemaVersion;
        this.useScheduler = useScheduler;
        this.rf1ContainerEnabled = rf1ContainerEnabled;
        this.clusterName = clusterName;
        this.previousClusterExternalIp = previousClusterExternalIp;
        this.witnessState = witnessState;
        this.clusterMasqueradingPort = clusterMasqueradingPort;
        this.entityCentricDrEnabled = entityCentricDrEnabled;
        this.clusterExternalDataServicesIp = clusterExternalDataServicesIp;
        this.mantleVersion = mantleVersion;
        this.dedupChecksumCollisionExceeded = dedupChecksumCollisionExceeded;
        this.rowCasUpgradeTimestamp = rowCasUpgradeTimestamp;
        this.disableCompression = disableCompression;
        this.hypervisorLldpConfig = hypervisorLldpConfig;
        this.curatorScanInfo = curatorScanInfo;
        this.useChecksumBasedDedup = useChecksumBasedDedup;
        this.acropolisBaselineKernelMemoryMbX86 = acropolisBaselineKernelMemoryMbX86;
        this.externalSubnet = externalSubnet;
        this.ftSupportEnabled = ftSupportEnabled;
        this.qosCatchallPrincipalName = qosCatchallPrincipalName;
        this.imageConversionCompleteObelix = imageConversionCompleteObelix;
        this.acropolisHaPriorityCleanupDone = acropolisHaPriorityCleanupDone;
        this.ntpServerList = ntpServerList;
        this.clusterUsageWarningAlertThresholdPct = clusterUsageWarningAlertThresholdPct;
        this.acropolisHaConfig = acropolisHaConfig;
        this.hypervisorSecurityComplianceConfig = hypervisorSecurityComplianceConfig;
        this.disableOnDiskDedup = disableOnDiskDedup;
        this.managementShareContainerId = managementShareContainerId;
        this.clusterContentCacheFingerprintPct = clusterContentCacheFingerprintPct;
        this.lwsStoreConfig = lwsStoreConfig;
        this.enableEfficientMetricSync = enableEfficientMetricSync;
        this.initialStargateVersion = initialStargateVersion;
        this.clusterFaultToleranceState = clusterFaultToleranceState;
        this.acropolisSchedulerCleanupDone = acropolisSchedulerCleanupDone;
        this.enableStrictDomainAwareness = enableStrictDomainAwareness;
        this.clusterCapabilities = clusterCapabilities;
        this.dnsConfig = dnsConfig;
        this.cloudSiteInfo = cloudSiteInfo;
        this.aesSupportedVersionLogicalTimestamp = aesSupportedVersionLogicalTimestamp;
        this.previousClusterExternalIpv6 = previousClusterExternalIpv6;
        this.clusterUsageCriticalAlertThresholdPct = clusterUsageCriticalAlertThresholdPct;
        this.vdiskListInPithos = vdiskListInPithos;
        this.backplaneNetworkConfig = backplaneNetworkConfig;
        this.dynRingChangeInfo = dynRingChangeInfo;
        this.acropolisAgentVmConversionDone = acropolisAgentVmConversionDone;
        this.clusterIncarnationId = clusterIncarnationId;
        this.catalogSubsetMigrationEnabled = catalogSubsetMigrationEnabled;
        this.hibernateState = hibernateState;
        this.useLowerTierToEnforceRuAwarePlacement = useLowerTierToEnforceRuAwarePlacement;
        this.eidMapEntriesPerNodeDedupThresholdExceeded = eidMapEntriesPerNodeDedupThresholdExceeded;
        this.clusterArch = clusterArch;
        this.passwordRemoteLoginEnabled = passwordRemoteLoginEnabled;
        this.shadowClonesEnabled = shadowClonesEnabled;
        this.cvmSecurityComplianceConfig = cvmSecurityComplianceConfig;
        this.externalV6Subnet = externalV6Subnet;
        this.clusterConversionStatus = clusterConversionStatus;
        this.curatorStargateProtocolConfig = curatorStargateProtocolConfig;
        this.nameServerIpList = nameServerIpList;
        this.clusterOperationMode = clusterOperationMode;
        this.clusterMasqueradingIp = clusterMasqueradingIp;
        this.authConfig = authConfig;
        this.recycleBinState = recycleBinState;
        this.logicalTimestamp = logicalTimestamp;
        this.acropolisSchedulerHotAddCleanupDone = acropolisSchedulerHotAddCleanupDone;
        this.pauseEcEncodeContainersList = pauseEcEncodeContainersList;
        this.clusterId = clusterId;
        this.clusterUuid = clusterUuid;
        this.diskTombstoneList = diskTombstoneList;
        this.sspConfigOwner = sspConfigOwner;
        this.isLts = isLts;
        this.stargateVersion = stargateVersion;
        this.recycleBinTtlSecs = recycleBinTtlSecs;
        this.extendedNfsFhandleEnabled = extendedNfsFhandleEnabled;
        this.nccVersion = nccVersion;
        this.pithosVersionInfo = pithosVersionInfo;
        this.multiFileSupportEnabled = multiFileSupportEnabled;
        this.vgOwnership = vgOwnership;
        this.blockStoreEnabled = blockStoreEnabled;
        this.nfsSubnetWhitelist = nfsSubnetWhitelist;
        this.kmsType = kmsType;
        this.rsyslogConfig = rsyslogConfig;
        this.internalSubnet = internalSubnet;
        this.memNvmeStorageTieringEnabled = memNvmeStorageTieringEnabled;
        this.disableFingerprinting = disableFingerprinting;
        this.alertThresholdStorageProvisioning = alertThresholdStorageProvisioning;
        this.catalogPeRegistered = catalogPeRegistered;
        this.defaultGatewayIp = defaultGatewayIp;
        this.stigEnabled = stigEnabled;
        this.clusterExternalIp = clusterExternalIp;
        this.clusterEncryptionParams = clusterEncryptionParams;
        this.releaseVersion = releaseVersion;
        this.timezone = timezone;
        this.adsConfig = adsConfig;
        this.ringFixState = ringFixState;
        this.rebuildReservationEnabled = rebuildReservationEnabled;
        this.fileServerUuid = fileServerUuid;
        this.vstoreUpgradeDone = vstoreUpgradeDone;
        this.pcClusterInfo = pcClusterInfo;
        this.metadataSnapshotsEnabled = metadataSnapshotsEnabled;
        this.networkConnectionStatsCollectionEnabled = networkConnectionStatsCollectionEnabled;
        this.disableDegradedNodeMonitoring = disableDegradedNodeMonitoring;
        this.iscsiConfig = iscsiConfig;
        this.curatorMaintenanceModeConfig = curatorMaintenanceModeConfig;
        this.ahvMemoryModelVersion = ahvMemoryModelVersion;
        this.certificationSigningInfo = certificationSigningInfo;
        this.clusterFullyQualifiedDomainName = clusterFullyQualifiedDomainName;
        this.blockIscsiTargetIps = blockIscsiTargetIps;
        this.domainFaultToleranceState = domainFaultToleranceState;
        this.metadataSnapshotLogicalTimestamp = metadataSnapshotLogicalTimestamp;
        this.cellFqdnList = cellFqdnList;
        this.rowCasUpgradeStatus = rowCasUpgradeStatus;
        this.catalogChangeOwnerInProgress = catalogChangeOwnerInProgress;
        this.commonCriteriaMode = commonCriteriaMode;
        this.clusterExternalIpv6 = clusterExternalIpv6;
        this.snmpInfo = snmpInfo;
        this.initializedDedupExtentsTwoPhaseDeletion = initializedDedupExtentsTwoPhaseDeletion;
    }

}
